####################################################################################
#
# This tool requires some perl modules in addition to the standard Evergreen modules:
#
# export PERL_MM_USE_DEFAULT=1 && perl -MCPAN -e 'install "Digest::SHA1"'
# export PERL_MM_USE_DEFAULT=1 && perl -MCPAN -e 'install "pQuery"'
# export PERL_MM_USE_DEFAULT=1 && perl -MCPAN -e 'install "REST::Client"'
#
####################################################################################

####################################################################################
# Log file location to write the log entries of the script
####################################################################################

logfile = /mnt/evergreen/tmp/test/electronic_marc_import.log

####################################################################################
# Domain Name
# Makes logs pretty and will provide a URL for easy clicking
####################################################################################

domainname = missourievergreen.org

####################################################################################
# Source name
# This is a way to keep track of the set of records in the database. This string
# value will be entered into config.bib_source if it doesn't exist. All imported
# records will be tagged with this string value as the source.
# NOTE: Auto record deduplication does not cross sources. Therefore, if you have
# multiple electronic MARC record imports, it could be a good idea to use the same
# source value for each such that the records can merge onto eachother. 856's are
# melted together each with the appropriate participant $9's.
####################################################################################

sourcename = e_bib

####################################################################################
# TCN Source Authority
# This flag is either set or not. Default is true. Any value is "true". Comment it
# out to resolve "false"
# When this flag is set, it will cause the software to always replace any matching
# bib record tcn_source with the values from this incoming record
# biblio.record_entry.tcn_source
# This is where the SHA1 is recorded for future matching purposes
# You would disable this flag when you expect the incoming records to match
# already-existing records and the already-existing records have a better tcn_source
# SHA1.
####################################################################################

tcn_source_authority = yes

####################################################################################
# bibtag
# This value is appended to the tcn_source when bibs are imported. Later, this is
# referenced during removals. Only bibs with this same tag will be scoped when
# searching for removals.
# import_as_is will cause this setting to be ignored
####################################################################################

bibtag = molib2go

####################################################################################
# Folder to output marc records
# The archive folder is used as a reference for all files previously processed software
# we can ignore new files with the exact same name and the exact same filesize.
####################################################################################

archivefolder = /mnt/evergreen/tmp/test/marc_records

####################################################################################
# Participants
# Comma separated list of shortnames for each of the branches/systems that
# will be included in the 856$9 values
####################################################################################

participants = BR1,BR2,BR4
participants = CARDINAL

####################################################################################
# Merge $9's
# If there is a matching record in the database, and that matching record has an
# identical 856 with a matching $u, then we will merge all of the $9's together
# or not.
# Comment this out to NOT merge the $9s
####################################################################################

# merge_9s = 1

# You can optionally cause the software to do nothing to the marc and import as-is
# This is usually in conjuction with passing --match_901c to the script
# Note: You need only uncomment this to turn it on. Any value is assumed "yes"

# import_as_is = yes

# You can optionally cause the software to NOT import records that do not match the database
# Note: You need only uncomment this to turn it on. Any value is assumed "yes"

# do_not_import_new = yes

####################################################################################
# Scratch space for the software to use when processing
####################################################################################

tempspace = /mnt/evergreen/tmp

####################################################################################
# Local Database Connection Options
####################################################################################
dbhost = 127.0.0.1
db = evergreen
dbuser = evergreen
dbpass = password
port = 5432

####################################################################################
# Record source
# Options are: FTP or folder or cloudlibrary or marcivehttps
# Note: cloudlibrary option enables the API connection to the remote server. 
####################################################################################

recordsource = folder

####################################################################################
# FTP/cloudlibrary option
# Configure here when using FTP or cloudlibrary as a source
# 
# NOTE:
# When cloudlibrary context:
# server = [https link to root API address, AKA https://partner.yourcloudlibrary.com]
# login = Cloud library "library ID"
# password = Cloud library "API Key"
#
# When marcivehttps context:
# server = link to folder listing {https://web.marcive.com/httpdownload/?l=ftp}
# remotefolder = Your special library folder name
# The rest of the settings can be ignored. The software will do the following:
# Folder listing: {server setting}&s={remotefolder setting}
# Download link: {server setting}&s={remotefolder setting}&file={filename found from folder listing}
####################################################################################

server = ftp.midwesttapes.com
login = hooplamarc
password = hooplamarc
remotefolder = /
# Recurse ftp folders? y = yes n = no
recurse = y

# Extra options required for cloudlibrary context
# File to keep track of last run time
lastdatefile = /path/to/cloud_lib_last_run.log

# Certificate generation - required for cloudlibrary context
# openssl genrsa -out cert.key 4096
# openssl req -new -x509 -days 1365 -key cert.key -out cert.crt
certpath = /path/to/cloud_library/cert.crt
certkeypath = /path/to/cloud_library/cert.key


####################################################################################
# File folder option
# Configure here when using a simple folder for import
# BEWARE - in recordsource=folder option will result in the removal of any file in this
# folder for cleaning for each subsequent execution
####################################################################################

incomingmarcfolder = /mnt/evergreen/utility/electronic_imports/ebscopubliclibload/incoming

####################################################################################
# Deciding when to download a file
# There are a few things we need to know. 
# 1. What phrases in the filename should cause the file to be ignored? (space delimited)
# 2. What phrases in the filename denote file containing records to be removed?
# 3. If the filename doesn't contain any of the removal phrases, it's assumed to be an add
# 4. Excel files are not currently supported
#
# Also - FYI - removal files are allowed to be text files or marc files
# in the case of a text file, the software will search for what looks like ISBN's
# and use those to search and remove in the database (only for records that this
# script previously created).
####################################################################################

# uncomment this if you want the software to only process flies with these matching filename
# fragments (space delimited)
#onlyprocess = pub

ignorefiles = .xls polaris

removalfiles = remove weed

# You can also import authority files with this matching criteria
authorityfiles = authority

# When importing authority records, we will automatically run the linking script but
# we need to know where it is and the cmd switches
authority_link_script_cmd = /openils/bin/authority_control_fields.pl --config /openils/conf/opensrf_core.xml --record

####################################################################################
# Authority control import software
# If you use this script to import authority files, you will also need to have
# the "eg_staged_bib_overlay" script available. This is where you define the path
# to the root folder.
# git repo git://git.esilibrary.com/migration-tools.git
####################################################################################

eg_staged_bib_overlay_dir = /mnt/evergreen/migration/migration-tools

####################################################################################
# Alert email source 
####################################################################################

fromemail = no-reply-mcoia@example.org

####################################################################################
# Alert Email destiniations
####################################################################################

erroremaillist = example@example.org
successemaillist = example@example.org, example2@example.org
# only 1 email address for alwaysemail
alwaysemail = example@example.org

####################################################################################
# MARC Manipulations
####################################################################################


# "replace" means, that if a field already exists, the code will manipulate the defined
# field.
# If the field DOES NOT exist, it will create it.
#
# "add" will cause the code to ignore any already-existing fields and add this one
#
# "remove" will remove the defined field

#######################
# Control field edits.
# add or replace
#######################

# Defined like this: 'type' => '{add|replace}', ('fieldnum','position_start','value')
#
# If you want to define the whole field, instead of a certain position:
# marc_edit_control_1 = 'type' => 'add|replace', 'def' => ['001','1','My data goes here starting at position 1']
# marc_edit_control_1 = 'type' => 'replace', 'def' => ['008','24','o']

#######################
# Control field edits.
# remove
#######################

# Defined like this: 'type' => 'remove', ['fieldnum1','fieldnum2','fieldnum3']
# marc_edit_control_2 = 'type' => 'remove', 'howmany' => '1', 'def' => ['007']

#######################
# Standard field edits.
# Adds or replace
#######################

# Defined like this: 'type' => '{add|replace}', 'def' => ['fieldnum','ind1','ind2','subfield','value']
# When specifying indicators, you can supply "same" which means "don't change if it already exists"

#######################
# Standard field edits.
# remove
#######################

# in the case of remove, you need only provide a list of fields like this:
# marc_edit_standard_1 = 'type' => 'remove', 'def' => ['852','853']

#######################
# Standard field edits.
# remove field only
# if a subfield exists
#######################

# You can specify indicators and subfield in the context of "remove" If you do, the system will inturpret this as:
# "Remove the subfield only when the specified indicators and subfield exists"
# example:
# marc_edit_standard_1 = 'type' => 'remove', 'howmany' => 'all', 'def' => ['856_4_none_3']
#
# When specifying indicators, you can specify also use these special words: "all", "none"
# "all" - means anything. It will match any indicator
# "none" - means that the indicator needs to not-exist. AKA: ' ', or '\', or '/' undefined
# NOTE: "none" will not work for a subfield. subfields need to be specific or "all"

#######################
# Standard field edits.
# removesubfield
#######################

# or if you only want to remove a subfield
# marc_edit_standard_2 = 'type' => 'removesubfield', 'def' => ['856','3']
#

#######################
# Standard field edits.
# "howmany" feature (for removals only)
#######################

# In the cases of remove, removesubfield, replace - you can specify "howmany" to limit the number of fields that
# is allowed to be removed or replaced. like this:
#
# marc_edit_standard_3 = 'type' => 'removesubfield', 'howmany' => '1', 'def' => ['650','2']
# This will remove all subfield 2's from the first 650 field. It will not go further than the first 650 field because
# "howmany" is specified as "1"
#
# You can specify 'howmany' => 'all' to indicate no limit. If you do not specify "howmany" it will default limit to 1


# marc_edit_standard_1 = 'type' => 'remove', 'howmany' => 'all', 'def' => ['856_4_none_3']
# marc_edit_standard_1 = 'type' => 'removesubfield', 'howmany' => 'all', 'def' => ['856','3']

# marc_edit_standard_2 = 'type' => 'replace', 'howmany' => 'all', 'def' => ['856','same','same','y','Click for online content.']

